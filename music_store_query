/* Q1: Who is the senior most employee based on job title? */

select
  title,
  first_name,
  last_name
from 
  `music_album.employee`
order by levels desc
limit 1

/* Q2: Which countries have the most Invoices? */

select 
billing_country,
count(*) as total_count
from 
  `music_album.invoice`
group by 1

/* Q3: What are top 3 values of total invoice? */

select 
  total
from
  `music_album.invoice`
order by 1 desc
limit 3

/* Q4: Which city has the best customers? We would like to throw a promotional Music Festival in the city we made the most money. 
Write a query that returns one city that has the highest sum of invoice totals. 
Return both the city name & sum of all invoice totals */

select
  billing_city,
  sum(total) as highest_sum        
from 
  `music_album.invoice`
group by 1
order by 2 desc
limit 1;

/* Q5: Who is the best customer? The customer who has spent the most money will be declared the best customer. 
Write a query that returns the person who has spent the most money.*/

select
  c.customer_id,
  c.first_name,
  c.last_name,
  sum(i.total) as high_spent
from 
  `music_album.customer` as c
join 
  `music_album.invoice` as i
on c.customer_id = i.customer_id
group by 1,2,3
order by 4 desc
limit 1;

/* Q6: Write query to return the email, first name, last name, & Genre of all Rock Music listeners. 
Return your list ordered alphabetically by email starting with A. */


select
distinct
  c.first_name,
  c.last_name,
  c.email,
  g.name as genre_name 
from 
  `music_album.customer` as c
join 
  `music_album.invoice` as i
on c.customer_id = i.customer_id
join 
  `music_album.invoice_line` as il
on i.invoice_id = il.invoice_id
join 
  `music_album.track` as t
on il.track_id = t.track_id
join 
  `music_album.genre` as g 
on t.genre_id = g.genre_id
where g.name like "Rock"
order by 3 asc;

/* Q7: Let's invite the artists who have written the most rock music in our dataset. 
Write a query that returns the Artist name and total track count of the top 10 rock bands. */


select
  ar.artist_id,
  ar.name,
  count(ar.artist_id) as no_of_song
from 
  `music_album.track` as t
join 
  `music_album.album` as a
on t.album_id = a.album_id
join 
  `music_album.artist` as ar
on a.artist_id = ar.artist_id
join 
  `music_album.genre` as g
on t.genre_id = g.genre_id
where 
  g.name like "Rock"
group by 1,2
order by 3 desc
limit 10;


/* Q8: Return all the track names that have a song length longer than the average song length. 
Return the Name and Milliseconds for each track. Order by the song length with the longest songs listed first. */

select
  name,
  milliseconds
from 
  `music_album.track`
where milliseconds >(
    select
    avg(milliseconds)
    from `music_album.track`)
  order by 2 desc;


/* Q9: Find how much amount spent by each customer on artists? Write a query to return customer name, artist name and total spent */

with cte as (
  select
    ar.artist_id,
    ar.name,
    sum(il.unit_price * il.quantity) as total_spend
  from 
    `music_album.invoice_line` as il
  join 
    `music_album.track` as t
  on il.track_id = t.track_id
  join 
    `music_album.album` as a
  on a.album_id = t.album_id
  join 
    `music_album.artist` as ar
  on ar.artist_id = a.artist_id
  group by 1,2
  order by 3 desc
  limit 1
)
select
  c.customer_id,
  c.first_name,
  c.last_name,
  sum(il.unit_price * il.quantity) as amount_spent
from 
  `music_album.invoice` as i
join 
  `music_album.customer` as c
on 
  c.customer_id = i.customer_id
join 
  `music_album.invoice_line` as il
on 
  i.invoice_id = il.invoice_id
join 
  `music_album.track` as t
on 
  t.track_id = il.track_id
join 
  `music_album.album` as a
on 
  t.album_id = a.album_id
join 
  cte 
on 
  cte.artist_id = a.artist_id
group by 1,2,3
order by 4 desc;


/* Q10: We want to find out the most popular music Genre for each country. We determine the most popular genre as the genre 
with the highest amount of purchases. Write a query that returns each country along with the top Genre. For countries where 
the maximum number of purchases is shared return all Genres. */


select
*
from(
  select
    count(il.invoice_id) as max_purchase,
    c.country,
    g.name,
    row_number() over(partition by c.country order by count(il.quantity)desc) as row_num
  from 
    `music_album.invoice` as i
  join 
    `music_album.invoice_line` as il
  on 
    i.invoice_id = il.invoice_id
  join 
    `music_album.customer` as c
  on 
    c.customer_id = i.customer_id
  join 
    `music_album.track` as t
  on 
    il.track_id = t.track_id
  join 
    `music_album.genre` as g
  on 
    g.genre_id = t.genre_id
  group by 2,3
  order by 2 asc, 1 desc
)
where row_num <=1;


/* Q11: Write a query that determines the customer that has spent the most on music for each country. 
Write a query that returns the country along with the top customer and how much they spent. 
For countries where the top amount spent is shared, provide all customers who spent this amount. */


with cte as(
  select
    c.country,
    c.first_name,
    c.last_name,
    i.billing_country,
    row_number() over (partition by i.billing_country order by sum(i.total)desc) as row_num,
    sum(i.total) as total_spend
  from 
    `music_album.customer` as c
  join 
    `music_album.invoice` as i
  on 
    c.customer_id = i.customer_id
  group by 
    1,2,3,4
  order by 1 asc, 6 desc
)
select
*
from 
  cte
where 
  row_num <=1

